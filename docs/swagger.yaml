basePath: /
definitions:
  apperror.Error:
    properties:
      errCode:
        type: string
      errMsg:
        type: string
      wrappedErr: {}
    type: object
  dto.PatchOfferStatusReq:
    properties:
      status:
        type: string
    required:
      - status
    type: object
  dto.PatchOfferStatusResp:
    properties:
      new_status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Это API для управления сделаками по продуктам.
  title: Stawberry API
  version: '1.0'
paths:
  /api/products/{id}/reviews:
    get:
      consumes:
      - application/json
      description: Получает все отзывы о продукте по его ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список отзывов
          schema:
            items:
              $ref: '#/definitions/entity.ProductReview'
            type: array
        "400":
          description: Некорректный ID продукта
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получение списка отзывов о продукте
      tags:
      - reviews
    post:
      consumes:
      - application/json
      description: Добавляет новый отзыв о продукте
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Данные отзыва
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/dto.AddReviewDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Отзыв успешно добавлен
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный ввод
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Неавторизованный доступ
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Добавление отзыва о продукте
      tags:
      - reviews
  /api/sellers/{id}/reviews:
    get:
      consumes:
      - application/json
      description: Получает все отзывы о продавце по его ID
      parameters:
      - description: Seller ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список отзывов
          schema:
            items:
              $ref: '#/definitions/entity.SellerReview'
            type: array
        "400":
          description: Некорректный ID продавца
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получение списка отзывов о продавце
      tags:
      - reviews
    post:
      consumes:
      - application/json
      description: Добавляет новый отзыв о продавце
      parameters:
      - description: Seller ID
        in: path
        name: id
        required: true
        type: integer
      - description: Данные отзыва
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/dto.AddReviewDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Отзыв успешно добавлен
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный ввод
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Неавторизованный доступ
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Добавление отзыва о продавце
      tags:
      - reviews
  /health:
    get:
      description: Возвращает статус сервера и текущее время
      produces:
        - application/json
      responses:
        '200':
          description: Успешный ответ с данными
          schema:
            additionalProperties: true
            type: object
      summary: Получить статус сервера
      tags:
        - health
  /offers/{offerID}:
    patch:
      consumes:
        - application/json
      parameters:
        - description: Offer ID
          in: path
          name: id
          required: true
          type: integer
        - description: Offer status update request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/dto.PatchOfferStatusReq'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dto.PatchOfferStatusResp'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/apperror.Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/apperror.Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/apperror.Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Error'
      summary: Update offer status
      tags:
        - offer
swagger: '2.0'
securityDefinitions:
  BearerAuth:
    description: 'Bearer token for authentication. Format: "Bearer <token>"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
